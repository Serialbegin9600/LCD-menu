/*LCD菜单，通过LCD显示操作项目，通过上、下、确定三个按钮完成操作。有主菜单和温湿度、灯光，风扇、灯光表演四个分页面*/
#include <dht11.h>
#include <LiquidCrystal.h>
LiquidCrystal lcd(4,6,7,8,9,10);
dht11 DHT;

int f_up=HIGH;
int f_down=HIGH;
int f_enter=HIGH;        //存储上下、确定三个按钮的之前状态，用于判断按钮按下
//事件

int state=0;             //记录当前工作内容，0菜单，1温度显示，2灯，3风扇，4灯光表演

int light_mode=0;        //记录灯光状态，分别对应0至三个灯亮
int wind_mode=0;         //记录风扇状态

int place=0;            //存储光标绝对位置（对应主菜单选项）
int relative_place=0;    //存储光标相对位置（屏幕上位置）

char*menu[]={"temperature","light","wind","light show"};
//菜单的各栏内容


void initial_menu()         //初始化菜单显示
{
  place=0;
  relative_place=0;       //光标位置归零
  state=0;                 //状态为菜单选择
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print(">");         //>作为光标
  lcd.print(menu[0]);
  lcd.setCursor(0,1);
  lcd.print(" ");         //空出光标的位置
  lcd.print(menu[1]);
  show_menu();
}

void show_menu()            //菜单上的光标移动及选项显示
{
  state=0;
  if(relative_place==0)
  {
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print(">");         //>作为光标
    lcd.print(menu[place]);
    lcd.setCursor(0,1);
    lcd.print(" ");         //空出光标的位置
    lcd.print(menu[place+1]);
  }
  if(relative_place==1)
  {
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print(" ");         //空出光标位置
    lcd.print(menu[place-1]);
    lcd.setCursor(0,1);
    lcd.print(">");         //光标
    lcd.print(menu[place]);
  }
}



void show_temperature()      //显示温湿度，DHT11信号引脚在0号口
{
  DHT.read(0);
  state=1;
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("temperature:");
  lcd.print(DHT.temperature);
  lcd.setCursor(0,1);
  lcd.print("humidity:");
  lcd.print(DHT.humidity);
}

void light()          //设定点亮的灯数量，并点亮相应灯
{
  state=2;
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("light mode:");
  lcd.setCursor(0,1);
  lcd.print(light_mode);
  for(int i=11;i<14;i++)
  {
    digitalWrite(i,LOW);
  }
  for(int i=11;i<11+light_mode;i++)
  {
    digitalWrite(i,HIGH);
  }
}

void wind()           //显示并修改风扇转动状态
{
  state=3;
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("wind mode");
  lcd.setCursor(0,1);
  lcd.print(wind_mode);
  analogWrite(5,4*wind_mode);
}


void lightshow()         //一段灯光变换
{
  lcd.setCursor(0,0);
  lcd.print("enjoy!");
  digitalWrite(11,LOW);
  digitalWrite(12,LOW);
  digitalWrite(13,LOW);
  delay(500);
  digitalWrite(11,HIGH);
  digitalWrite(12,LOW);
  digitalWrite(13,LOW);
  delay(500);
  digitalWrite(11,HIGH);
  digitalWrite(12,HIGH);
  digitalWrite(13,LOW);
  delay(500);
  digitalWrite(11,HIGH);
  digitalWrite(12,HIGH);
  digitalWrite(13,HIGH);
  delay(500);
  digitalWrite(11,LOW);
  digitalWrite(12,LOW);
  digitalWrite(13,LOW);
  delay(500);
  digitalWrite(11,HIGH);
  digitalWrite(12,HIGH);
  digitalWrite(13,HIGH);
  delay(500);
  digitalWrite(11,LOW);
  digitalWrite(12,LOW);
  digitalWrite(13,LOW);
  delay(500);
  digitalWrite(11,HIGH);
  digitalWrite(12,HIGH);
  digitalWrite(13,HIGH);
  delay(500);
  digitalWrite(11,LOW);
  digitalWrite(12,HIGH);
  digitalWrite(13,HIGH);
  delay(500);
  digitalWrite(11,LOW);
  digitalWrite(12,LOW);
  digitalWrite(13,HIGH);
  delay(500);
  digitalWrite(11,LOW);
  digitalWrite(12,LOW);
  digitalWrite(13,LOW);
  delay(500);
}


 



void setup() {
  //Serial.begin(9600);
  lcd.begin(16,2);
  pinMode(1,INPUT);
  pinMode(2,INPUT);
  pinMode(3,INPUT);     //三个按键

  
  pinMode(11,OUTPUT);
  pinMode(12,OUTPUT);
  pinMode(13,OUTPUT);     //三个灯

  pinMode(5,OUTPUT);      //风扇

  initial_menu();        //初始化显示屏

}

void loop() {
  if(digitalRead(1)==HIGH&&f_up==LOW)              //若向上键被按下
  {
    
    if(state==0&&place!=0)   //若是在菜单模式且未到达上端，则光标位置上移，相对位置为上
    {//Serial.println("up");
      place--;
      relative_place=0;
      show_menu();
    }
    else if(state==2)
    {
      light_mode++;
      light();
    }
    else if(state==3)
    {
      wind_mode++;
      wind();
    }
  }
  else if(digitalRead(3)==HIGH&&f_down==LOW)            //若向下键被按下
  {
    
    if(state==0&&place!=3)   //若在菜单下且未到达下端，光标下移，相对位置为下方
    {//Serial.println("down");
      place++;
      relative_place=1;
      show_menu();
    }
    else if(state==2)
    {
      light_mode--;
      light();
    }
    else if(state==3)
    {
      wind_mode--;
      wind();
    }
  }
  else if(digitalRead(2)==HIGH&&f_enter==LOW)
  {//Serial.println("enter");
    if(state==0)
    {
      if(place==0)
      {show_temperature();}
      else if(place==1)
      {light();}
      else if(place==2)
      {wind();}
      else if(place==3)
      {lightshow();}
    }
    else
    {
      initial_menu();
    }
  }
  f_up=digitalRead(1);
  f_down=digitalRead(3);
  f_enter=digitalRead(2);
  delay(30);
  
}
